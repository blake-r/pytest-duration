name: cicd
on:
  pull_request:
    types: [ opened, reopened, synchronize]
  release:
    types: [ published ]

defaults:
  run:
    shell: bash

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Prepare for pre-commit run
        run: pip install -r requirements-ci.txt
      - uses: pre-commit/action@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare artefacts
        run: |
          pip install --no-cache-dir poetry
          poetry install --no-root
          poetry build
          pip install --no-cache-dir dist/*.whl
      - name: Run tests
        run: pytest --showlocals -vv --cov
      - name: Upload artefacts
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags') && matrix.python-version == '3.10'
        with:
          name: dist-${{ matrix.python-version }}
          path: dist/

  cd:
    # https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    needs: [ ci ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v3
        with:
          name: dist-3.10
          path: dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.event.release.prerelease == true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository: https://test.pypi.org/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: github.event.release.prerelease == false
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
